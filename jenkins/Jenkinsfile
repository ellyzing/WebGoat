pipeline {
   agent {
     node {
      label 'TestNode' 
   }
}
stages {
    
    stage('Checkout') {
    steps {
    	echo 'step Git Checkout'
		checkout scm
        }
    }
    stage('Build') {
        steps {
        sh 'chmod +x ./mvnw'
        sh './mvnw clean install' 
        }
    }
    stage('FindBug') {
        steps{
            recordIssues aggregatingResults: true, tools: [findBugs(useRankAsPriority: true)]
        }
    }
        stage("OWASP Dependency-Check Vulnerabilities") {
          steps {
            configFileProvider([configFile(fileId: 'uuid', targetLocation: 'proxy.properties')]) {
              dependencyCheck additionalArguments: '''
                -f "ALL"
                -o "reports"
                -P "proxy.properties"
                --suppression "dependency-check-known-issues.xml"
                --disableAssembly
                --disableYarnAudit
                --failOnCVSS 7''', odcInstallation: 'OWASP-DC'
            }
        }
    }

}
}
